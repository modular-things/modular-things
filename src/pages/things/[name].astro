---
export async function getStaticPaths() {
  let things = await Astro.glob(`../../../things/_things.json`);

  const result = things[0].default.map(t => {
    return {
      params: { name: t.name }
    }
  });

  return result
}

const { name } = Astro.params;

let things = await Astro.glob(`../../../things/_things.json`);

things = things[0].default;

const target = things.filter(x => x.name === name)[0];

const glob = await Astro.glob(`../../../things/*/*.md`);
const md = glob.filter(x => x.file.includes(name))[0];

let software = "";
if (target.software) {
  try {
    const url = `https://raw.githubusercontent.com/modular-things/modular-things/main/things/${target.name}/${target.software}`;
    const res = await fetch(url);
    const text = await res.text();

    software = text;
  } catch (err) {

  }
}

let firmware = "";
if (target.firmware) {
  try {
    const url = `https://raw.githubusercontent.com/modular-things/modular-things/main/things/${target.name}/${target.firmware}`;
    const res = await fetch(url);
    const text = await res.text();

    firmware = text;
  } catch (err) {

  }
}
---

<head>
  <meta charset="utf-8">
  <base href="/things/" />
</head>

<body>
  <style>
    body {
      padding: 0px;
      margin: 0px;
      font-family: Helvetica,Arial,Sans-Serif;
      background: #eeeeee;
    }

    .top-menu {
      cursor: default;
      display: flex;
      align-items: center;
      background: #33e;
      padding-left: 0.5rem;
      padding-right: 0.5rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      border-bottom: solid 0.3px black;
      font-size: 0.95em;
      position: relative;
    }

    .menu-item {
      color: white;
      padding-left: 16px;
      padding-right: 16px;
      padding-top: 8px;
      padding-bottom: 8px;
      border-radius: 5px;
    }

    .menu-item a {
      color: white;
      text-decoration: none;
    }

    .menu-item:hover {
      background: #4848f1; /* very similar to opacity 0.9 */
    }

    .menu-title {
      font-size: 1.1em;
      font-weight: bold;
      padding-left: 10px;
      padding-right: 10px;
      color: white;
    }

    .content {
      width: 60%;
      margin: auto;
      padding-bottom: 1rem;
    }

    .code-snippet {
      background: lightgrey;
      padding: 1rem;
      border-radius: .5rem;
      overflow-x: scroll;
    }
  </style>

  <div class="top-menu">
    <div class="menu-title">Modular Things / {`${target.name}`}</div>
    <div class="menu-item"><a href="../things/">/things</a></div>
    <div class="menu-item"><a href="../">editor</a></div>
    <div class="menu-item" style="position: absolute; right: 10px;">
      <a target="new" href={`https://github.com/modular-things/modular-things/tree/main/things/${target.name}`}>
        {`${target.name} on GitHub`}
      </a></div>
    <!-- <div style="font-size: 1rem; padding-top: .3rem;">
      Device can be found <a style="color: white" href={`https://github.com/modular-things/modular-things/tree/main/things/${target.name}`}>on GitHub here</a>.
    </div> -->
  </div>

  <div class="content">

    <h1>things / {target.name}</h1>

    <div style="display: flex; flex-direction: row; width: 100%;">
      {
        target.images.map(x => {
          return <a 
            style="color:inherit; text-decoration: none; display: flex; flex-direction: column; flex: 1; padding: .6rem;"
            href={`https://raw.githubusercontent.com/modular-things/modular-things/main/things/${target.name}/${x.src}`}>
            <div style={`
              background-image: url('https://raw.githubusercontent.com/modular-things/modular-things/main/things/${target.name}/${x.src}');
              background-size: cover;
              background-position: center center;
              background-repeat: no-repeat;
              width: 100%;
              aspect-ratio: 1;
              border-radius: .3rem;
              border: 1px solid black;
            `}/>
            <div style="width: 100%; text-align: center; padding-top: .5rem;">{x.name}</div>
          </a>
        })
      }
    </div>

    <h1>README</h1>
    <md.Content />

    <h1>Software</h1>
    <pre class="code-snippet">{software}</pre>

    <h1>Firmware</h1>
    <pre class="code-snippet">{firmware}</pre>
  </div>
</body>










