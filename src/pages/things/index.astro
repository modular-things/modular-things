---
let things = await Astro.glob(`../../../things/*/*.md`);

// let thingsYAML = await Astro.glob(`../../../things/*/*.yaml`);

things = things.filter(t => Object.keys(t.frontmatter).length > 0);


console.log(things);
---

<head>
  <meta charset="utf-8">
  <base href="/modular-things/things/">
</head>

<body>

<style>

  body {
    background: #eeeeee;
  }

  .title {
    font-size: 2rem;
  }

  .things-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    width: 100%;
    padding-top: 2rem;
  }

  .thing-entry {
    color: inherit;
    text-decoration: none;
    font-weigth: normal;

    border: 2px solid black;
    width: 300px;
    aspect-ratio: 1;
    border-radius: .5rem;
    cursor: pointer;
    background: white;
    margin: 1rem;
  }

  .thing-entry:hover {
    background: #ffad0a8f;
  }

  .entry-title {
    padding: .5rem;
  }

  .entry-name {
    font-size: 1.5rem;
    text-align: center;
  }

  .entry-author {
    font-size: .9rem;
    color: #908686;
    text-align: center;
  }
</style>

<div class="title">Check out our collection of modular things!</div>

<div class="things-container">
  {false && things.map(t => {

    console.log(t);

    return <a class="thing-entry" href={`${t.frontmatter.name}`}>
      <div class="entry-title">
        <div class="entry-name">{t.frontmatter.name}</div>
        <div class="entry-author">{t.frontmatter.author}</div>
      </div>
      <div style={`
        background-size: cover;
        background-position: center center;
        background-repeat: no-repeat;
        width: 100%;
        aspect-ratio: 1;
      `}/>
      {/*<t.Content />*/}
    </a>
  })}
</div>

</body>